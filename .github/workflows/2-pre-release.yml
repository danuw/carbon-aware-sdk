name: Publish container image to GitHub Packages

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: publish
  cancel-in-progress: true

jobs:
  publish-container-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Check pre-release
        run: |
          $IS_LATEST = (!$${{ github.event.release.prerelease }}).ToString().ToLower()
          $FLAVOR_SUFFIX = $${{ github.event.release.prerelease }} ? "pre" : ""
          "IS_LATEST=$IS_LATEST" >> $env:GITHUB_ENV
          "FLAVOR_SUFFIX=$FLAVOR_SUFFIX" >> $env:GITHUB_ENV
        shell: pwsh
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          tags: type=raw,value=${{ github.ref_name }}
          flavor: |
            latest=${{ env.IS_LATEST }}
            suffix=${{ env.FLAVOR_SUFFIX }}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: "{{defaultContext}}:src"
          file: CarbonAware.WebApi/src/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
