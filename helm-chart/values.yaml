# Default values for carbon-aware-sdk.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/green-software-foundation/carbon-aware-sdk
  #pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  #tag: latest

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: carbon-aware-sdk.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: carbon-aware-sdk-tls
  #    hosts:
  #      - carbon-aware-sdk.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env: []

# /app/appsettings.json
appsettings: |-
  {
    "DataSources": {
      "EmissionsDataSource": "ElectricityMaps",
      "ForecastDataSource": "WattTime",
      "Configurations": {
        "WattTime": {
          "Type": "WattTime",
          "Username": "username",
          "Password": "password",
          "BaseURL": "https://api2.watttime.org/v2/",
          "Proxy": {
            "useProxy": true,
            "url": "http://10.10.10.1",
            "username": "proxyUsername",
            "password": "proxyPassword"
          }
        },
        "ElectricityMaps": {
          "Type": "ElectricityMaps",
          "APITokenHeader": "auth-token",
          "APIToken": "myAwesomeToken",
          "BaseURL": "https://api.electricitymap.org/v3/"
        }
      }
    }
  }

# Location source
# Location data will be deployed into /app/location-sources/json .
locationSources:
  enabled: false
#  files:
#  - fileName: custom-locations-1.json
#    locations: |-
#      {
#        "east": {
#          "Latitude": "35.68",
#          "Longitude": "139.77",
#          "Name": "eastdc"
#        },
#        "west": {
#          "Latitude": "34.6939",
#          "Longitude": "135.5022",
#          "Name": "westdc"
#        }
#      }
#  - fileName: custom-locations-2.json
#    locations: |-
#      {
#        "north": {
#         "Latitude": "35.68",
#          "Longitude": "139.77",
#          "Name": "northdc"
#        },
#        "south": {
#          "Latitude": "34.6939",
#          "Longitude": "135.5022",
#          "Name": "southdc"
#        }
#      }
